name: SonarCloud Analysis

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            
      - name: Generate and post detailed metrics comment
        if: github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          METRICS=$(curl -s -u ${SONAR_TOKEN}: "https://sonarcloud.io/api/measures/component?component=${PROJECT_KEY}&metricKeys=complexity,cognitive_complexity,function_complexity,duplicated_lines_density,sqale_rating,reliability_rating" | jq -r '.component.measures')
          
          COMMENT="## Detailed SonarCloud Metrics\n\n"
          COMMENT+="### Complexity Metrics\n"
          COMMENT+="- Cyclomatic Complexity: $(echo $METRICS | jq -r '.[] | select(.metric == "complexity") | .value')\n"
          COMMENT+="- Cognitive Complexity: $(echo $METRICS | jq -r '.[] | select(.metric == "cognitive_complexity") | .value')\n"
          COMMENT+="- Function Complexity: $(echo $METRICS | jq -r '.[] | select(.metric == "function_complexity") | .value')\n\n"
          COMMENT+="### Code Quality\n"
          COMMENT+="- Duplicated Lines (%): $(echo $METRICS | jq -r '.[] | select(.metric == "duplicated_lines_density") | .value')\n"
          COMMENT+="- Technical Debt Rating: $(echo $METRICS | jq -r '.[] | select(.metric == "sqale_rating") | .value')\n"
          COMMENT+="- Reliability Rating: $(echo $METRICS | jq -r '.[] | select(.metric == "reliability_rating") | .value')\n"
          
          echo "$COMMENT" > comment.txt
          
      - name: Post comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('comment.txt', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
